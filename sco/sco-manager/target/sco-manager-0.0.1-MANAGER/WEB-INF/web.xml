<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<display-name>SCO-MANAGER</display-name>
	<distributable />
	
	<!-- 
		web.xml的加载顺序为 <context-param> → <listener> → <filter> → <servlet>
		
		<context-param>元素含有一对参数名和参数值，用作应用的Servlet上下文初始化参数，
		参数名在整个Web应用中必须是惟一的，在web应用的整个生命周期中上下文初始化参数都存在，
		任意的Servlet和jsp都可以随时随地访问它。
		<param-name>子元素包含有参数名，而<param-value>子元素包含的是参数值。
	 -->
	 
	 <!-- 在tomcat下部署两个或多个项目时,web.xml文件中最好定义webAppRootKey参数,如果不定义,将会缺省为webapp.root -->
	 <context-param>
	 	<param-name>webAppRootKey</param-name>
	 	<param-value>webapp.manager</param-value>
	 </context-param>
	
	<!-- 指定Spring 配置文件的位置  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	
	<!-- 指定Log4J 配置文件的位置  -->  
	<context-param>  
  	  	<param-name>log4jConfigLocation</param-name>  
    	<param-value>classpath:log4j.properties</param-value>
	</context-param>
	
	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Spring的log4j监听器 -->  
	<listener>  
    	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
	</listener> 
	
	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 配置字符集 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 不拦截静态文件 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
		<url-pattern>/js/*</url-pattern>
		<url-pattern>/css/*</url-pattern>
		<url-pattern>/images/*</url-pattern>
		<url-pattern>/fonts/*</url-pattern>
	</servlet-mapping>
	
	<!-- URL 重写 -->
	<filter>
    	<filter-name>UrlRewriteFilter</filter-name>
    	<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- Spring MVC servlet -->
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<error-page>
		<error-code>404</error-code>
		<location>/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/error/500.jsp</location>
	</error-page>
	
</web-app>